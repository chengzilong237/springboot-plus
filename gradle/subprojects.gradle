/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2017 cuisongliu@qq.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
apply from: "$rootDir/gradle/extra/plugins.gradle"
apply from: "$rootDir/gradle/extra/compile.gradle"
apply from: "$rootDir/gradle/extra/pack.gradle"
def springBootGroup = "org.springframework.boot"
def springBootArtifactId = "spring-boot-starter-"
dependencies {
    // 依赖maven中不存在的jar
    ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
    ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
    ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

    compile jarTree

    compile "${springBootGroup}:${springBootArtifactId}web:${springBootVersion}"
    compile "${springBootGroup}:${springBootArtifactId}jdbc:${springBootVersion}"
    compile "${springBootGroup}:${springBootArtifactId}aop:${springBootVersion}"
    compile "${springBootGroup}:${springBootArtifactId}thymeleaf:${springBootVersion}"

    compile "cglib:cglib-nodep:${cglibVersion}"
    compile "commons-codec:commons-codec:${codecVersion}"
    compile "commons-beanutils:commons-beanutils-core:${beanUtilsVersion}"
    compile "commons-collections:commons-collections:${collectionsVersion}"
    compile "commons-lang:commons-lang:${commonsLangVersion}"

    compile "org.jsoup:jsoup:${jsoupVersion}"

    compile "com.alibaba:fastjson:${fastJsonVersion}"

    compile "mysql:mysql-connector-java:${mysqlVersion}"
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMysqlVersion}"
    compile "tk.mybatis:mapper-spring-boot-starter:${springBootTkMapperVersion}"
    compile "com.github.pagehelper:pagehelper-spring-boot-starter:${springBootPageHelperVersion}"
    compile "com.cuisongliu:orderbyhelper-spring-boot-starter:1.0"
    compile "com.cuisongliu:druid-spring-boot-starter:${druidVersion}.04"

    testCompile "${springBootGroup}:${springBootArtifactId}test:${springBootVersion}"

}
// JVM 版本号要求
sourceCompatibility = 1.7
targetCompatibility = 1.7
// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
